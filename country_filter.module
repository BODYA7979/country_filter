<?php

/**
 * Implements hook_boot().
 */
function country_filter_boot() {
  if (variable_get('country_filter_enable')) {
    // init variables
    $in_list = FALSE;
    $access_denied = FALSE;
    $selected_countries = explode(',', variable_get('country_filter_countries', ''));
    foreach ($selected_countries as $key => $value) {
      $selected_countries[$key] = trim($value);
    }
    $mode = variable_get('country_filter_mode', 'deny');
    $service = variable_get('country_filter_service', '');
    $user_ip = ip_address();
    $current_path = request_uri();

    if ($current_path == '/country-denied') return;

    if (!empty($service)) {
      $user_country_code = '';
      if ($service == 'geoplugin') {
        $api_endpoint = 'http://www.geoplugin.net/json.gp?ip=' . $user_ip;
        if ($response = @file_get_contents($api_endpoint)) {
          $response = json_decode($response, TRUE);
          $user_country_code = $response['geoplugin_countryCode'];
        }
      }
      elseif ($service == '2ipcomua') {
        $api_endpoint = 'http://api.2ip.ua/geo.json?ip=' . $user_ip;
        if ($response = @file_get_contents($api_endpoint)) {
          $response = json_decode($response, TRUE);
          $user_country_code = $response['country_code'];
        }
      }
      else {
        return;
      }

      if (in_array($user_country_code, $selected_countries)) {
        $in_list = TRUE;
      }

      if ($mode == 'deny') {
        if ($in_list) {
          $access_denied = TRUE;
        }
      }
      elseif ($mode == 'allow') {
        if (!$in_list) {
          $access_denied = TRUE;
        }
      }
      else {
        return;
      }

      if ($access_denied) {
        header('Location: ' . '/country-denied');
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function country_filter_menu() {
  $items = array();
  $items['admin/config/people/country_filter'] = array(
    'title' => 'Country filter',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_country_filter_settings'),
    'access arguments' => array('access country filter settings'),
    'description' => t('Change settings for countries that have access to this site'),
  );
  $items['country-denied'] = array(
    'title callback' => '_country_denied_title',
    'page callback' => '_contry_denied_content',
    'access callback' => TRUE,
  );
  return $items;
}

function _country_denied_title() {
  return t(variable_get('country_filter_denied_page', array('title' => ''))['title']);
}

function _contry_denied_content() {
  return t(variable_get('country_filter_denied_page', array('content' => ''))['content']);
}

/**
 * Implements hook_permission().
 */
function country_filter_permission() {
  $permissions = array();
  $permissions['access country filter settings'] = array(
    'name' => t('Administer Country filter'),
    'description' => t('Perform administration tasks for country filter module'),
  );
  return $permissions;
}

/**
 * Module main settings form
 */
function _country_filter_settings($form, &$form_state) {

  $form['country_filter_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable country filter functionality'),
    '#default_value' => variable_get('country_filter_enable', FALSE),
    '#return_value' => 1,
  );

  if (variable_get('country_filter_enable', FALSE)) {

    $form['country_filter_service'] = array(
      '#type' => 'radios',
      '#title' => t('Choose country detection API'),
      '#options' => array(),
      '#default_value' => variable_get('country_filter_service', array()),
    );
    foreach (_country_filter_get_available_services() as $key => $details) {
      $form['country_filter_service']['#options'][$key] = $details['name'];
      if (!empty($details['description'])) {
        $form['country_filter_service']['#options'][$key] .= ' - <b>'.$details['description'].'</b>';
      }
    }

    $form['country_filter_countries'] = array(
      '#type' => 'textarea',
      '#default_value' => variable_get('country_filter_countries', ''),
      '#title' => t('Countries'),
      '#description' => t('Fill here country codes, that will be blocked/unblocked. Codes can be found <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements" target="_blank">here</a>'),
      '#attributes' => array(
        'placeholder' => 'Countries, e.g. IN, AF, AZ',
      ),
    );

    $form['country_filter_mode'] = array(
      '#type' => 'radios',
      '#title' => t('Mode'),
      '#options' => array(
        'deny' => t('Deny'),
        'allow' => t('Allow'),
      ),
      '#default_value' => 'deny',
    );

    $form['country_filter_denied_page'] = array(
      '#type' => 'fieldset',
      '#title' => 'Denied country page configuration',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );

    $form['country_filter_denied_page']['title'] = array(
      '#type' => 'textfield',
      '#title' => 'Title',
      '#default_value' => variable_get('country_filter_denied_page', array('title' => '')['title']),
    );

    $form['country_filter_denied_page']['content'] = array(
      '#type' => 'textarea',
      '#title' => 'Text',
      '#default_value' => variable_get('country_filter_denied_page', array('content' => ''))['content'],
    );

  }

  return system_settings_form($form);
}

/**
 * Get array of available services
 * @return array
 */
function _country_filter_get_available_services() {
  return array(
    'geoplugin' => array(
      'name' => t('api.geoplugin.net'),
      'description' => t('Other popular geo ip service without limits of usage. It use MaxMind database'),
    ),
    '2ipcomua' => array(
      'name' => t('api.2ip.com.ua'),
      'description' => t('Ukrainian geo ip service'),
    ),
  );
}